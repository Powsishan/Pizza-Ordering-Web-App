{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:4001/piz';\n\n// Add a new reservation \nexport const addReservation = async reservationData => {\n  try {\n    const response = await axios.post(`${API_URL}/makereservation`, reservationData);\n    return response.data;\n  } catch (error) {\n    console.error('Error making reservation:', error);\n    throw error;\n  }\n};\n\n// Get all  reservation (Admin protected route)\nexport const getReservation = async (reservationData, token) => {\n  try {\n    const response = await axios.post(`${API_URL}/reservation`, reservationData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching reservation:', error);\n    throw error;\n  }\n};\n\n// Update reservation (User protected route)\nexport const updateReservation = async (reservationId, updatedData, token) => {\n  try {\n    const response = await axios.put(`${API_URL}/updatereservations/${reservationId}`, updatedData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error updating reservation:', error);\n    throw error;\n  }\n};\n\n// Update reservation status (Admin protected route)\nexport const updateReservationStatus = async (reservationId, status, token) => {\n  try {\n    const response = await axios.put(`${API_URL}/updatereservations/status/${reservationId}`, {\n      status\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error updating reservation status:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","addReservation","reservationData","response","post","data","error","console","getReservation","token","headers","Authorization","updateReservation","reservationId","updatedData","put","updateReservationStatus","status"],"sources":["D:/Learn/pizza/frontend/src/services/reservationService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n\r\nconst API_URL = 'http://localhost:4001/piz';\r\n\r\n// Add a new reservation \r\nexport const addReservation = async (reservationData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/makereservation`, reservationData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error making reservation:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n// Get all  reservation (Admin protected route)\r\nexport const getReservation = async (reservationData, token) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/reservation`, reservationData, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching reservation:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update reservation (User protected route)\r\nexport const updateReservation = async (reservationId, updatedData, token) => {\r\n  try {\r\n    const response = await axios.put(`${API_URL}/updatereservations/${reservationId}`, updatedData, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error updating reservation:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update reservation status (Admin protected route)\r\nexport const updateReservationStatus = async (reservationId, status, token) => {\r\n  try {\r\n    const response = await axios.put(`${API_URL}/updatereservations/status/${reservationId}`, { status }, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error updating reservation status:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA,OAAO,MAAMC,cAAc,GAAG,MAAOC,eAAe,IAAK;EACvD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,kBAAkB,EAAEE,eAAe,CAAC;IAChF,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC;;AAGD;AACA,OAAO,MAAME,cAAc,GAAG,MAAAA,CAAON,eAAe,EAAEO,KAAK,KAAK;EAC9D,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,cAAc,EAAEE,eAAe,EAAE;MAC3EQ,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUF,KAAK;MAChC;IACF,CAAC,CAAC;IACF,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,iBAAiB,GAAG,MAAAA,CAAOC,aAAa,EAAEC,WAAW,EAAEL,KAAK,KAAK;EAC5E,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACgB,GAAG,CAAC,GAAGf,OAAO,uBAAuBa,aAAa,EAAE,EAAEC,WAAW,EAAE;MAC9FJ,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUF,KAAK;MAChC;IACF,CAAC,CAAC;IACF,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMU,uBAAuB,GAAG,MAAAA,CAAOH,aAAa,EAAEI,MAAM,EAAER,KAAK,KAAK;EAC7E,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACgB,GAAG,CAAC,GAAGf,OAAO,8BAA8Ba,aAAa,EAAE,EAAE;MAAEI;IAAO,CAAC,EAAE;MACpGP,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUF,KAAK;MAChC;IACF,CAAC,CAAC;IACF,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}