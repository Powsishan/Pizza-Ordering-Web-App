{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learn\\\\pizza\\\\frontend\\\\src\\\\context\\\\PizzaContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useCallback } from 'react';\nimport { getPizzas } from '../services/pizzaService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PizzaContext = /*#__PURE__*/createContext();\nconst initialState = {\n  pizzas: [],\n  loading: false,\n  error: null\n};\nconst pizzaReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_PIZZAS_REQUEST':\n      return {\n        ...state,\n        loading: true\n      };\n    case 'FETCH_PIZZAS_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        pizzas: action.payload\n      };\n    case 'FETCH_PIZZAS_FAILURE':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\nconst PizzaProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(pizzaReducer, initialState);\n  const [searchTerm, setSearchTerm] = useState('');\n  const fetchPizzas = useCallback(async () => {\n    dispatch({\n      type: 'FETCH_PIZZAS_REQUEST'\n    });\n    try {\n      const pizzas = await getPizzas();\n      dispatch({\n        type: 'FETCH_PIZZAS_SUCCESS',\n        payload: pizzas\n      });\n    } catch (error) {\n      dispatch({\n        type: 'FETCH_PIZZAS_FAILURE',\n        payload: error.message\n      });\n    }\n  }, []);\n  const handleSearchTermChange = term => {\n    setSearchTerm(term);\n  };\n  return /*#__PURE__*/_jsxDEV(PizzaContext.Provider, {\n    value: {\n      state,\n      fetchPizzas\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(PizzaProvider, \"TbMghJdmIvbRIWLLBqmbdQsxSL4=\");\n_c = PizzaProvider;\nconst usePizza = () => {\n  _s2();\n  return useContext(PizzaContext);\n};\n_s2(usePizza, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { PizzaProvider, usePizza };\nvar _c;\n$RefreshReg$(_c, \"PizzaProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useCallback","getPizzas","jsxDEV","_jsxDEV","PizzaContext","initialState","pizzas","loading","error","pizzaReducer","state","action","type","payload","PizzaProvider","children","_s","dispatch","searchTerm","setSearchTerm","useState","fetchPizzas","message","handleSearchTermChange","term","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","usePizza","_s2","$RefreshReg$"],"sources":["D:/Learn/pizza/frontend/src/context/PizzaContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer,useCallback } from 'react';\r\nimport { getPizzas } from '../services/pizzaService';\r\n\r\nconst PizzaContext = createContext();\r\n\r\nconst initialState = {\r\n    pizzas: [],\r\n    loading: false,\r\n    error: null,\r\n};\r\n\r\nconst pizzaReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_PIZZAS_REQUEST':\r\n            return { ...state, loading: true };\r\n        case 'FETCH_PIZZAS_SUCCESS':\r\n            return { ...state, loading: false, pizzas: action.payload };\r\n        case 'FETCH_PIZZAS_FAILURE':\r\n            return { ...state, loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst PizzaProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(pizzaReducer, initialState);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    const fetchPizzas = useCallback(async () => {\r\n        dispatch({ type: 'FETCH_PIZZAS_REQUEST' });\r\n        try {\r\n            const pizzas = await getPizzas();\r\n            dispatch({ type: 'FETCH_PIZZAS_SUCCESS', payload: pizzas });\r\n        } catch (error) {\r\n            dispatch({ type: 'FETCH_PIZZAS_FAILURE', payload: error.message });\r\n        }\r\n    }, []);\r\n\r\n    const handleSearchTermChange = (term) => {\r\n        setSearchTerm(term);\r\n    };\r\n\r\n    return (\r\n        <PizzaContext.Provider value={{ state, fetchPizzas }}>\r\n            {children}\r\n        </PizzaContext.Provider>\r\n    );\r\n\r\n};\r\n\r\nconst usePizza = () => {\r\n    return useContext(PizzaContext);\r\n};\r\n\r\nexport { PizzaProvider, usePizza };\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,EAACC,WAAW,QAAQ,OAAO;AAChF,SAASC,SAAS,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,YAAY,gBAAGP,aAAa,CAAC,CAAC;AAEpC,MAAMQ,YAAY,GAAG;EACjBC,MAAM,EAAE,EAAE;EACVC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACpC,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,sBAAsB;MACvB,OAAO;QAAE,GAAGF,KAAK;QAAEH,OAAO,EAAE;MAAK,CAAC;IACtC,KAAK,sBAAsB;MACvB,OAAO;QAAE,GAAGG,KAAK;QAAEH,OAAO,EAAE,KAAK;QAAED,MAAM,EAAEK,MAAM,CAACE;MAAQ,CAAC;IAC/D,KAAK,sBAAsB;MACvB,OAAO;QAAE,GAAGH,KAAK;QAAEH,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEG,MAAM,CAACE;MAAQ,CAAC;IAC9D;MACI,OAAOH,KAAK;EACpB;AACJ,CAAC;AAED,MAAMI,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACN,KAAK,EAAEO,QAAQ,CAAC,GAAGlB,UAAU,CAACU,YAAY,EAAEJ,YAAY,CAAC;EAChE,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMC,WAAW,GAAGrB,WAAW,CAAC,YAAY;IACxCiB,QAAQ,CAAC;MAAEL,IAAI,EAAE;IAAuB,CAAC,CAAC;IAC1C,IAAI;MACA,MAAMN,MAAM,GAAG,MAAML,SAAS,CAAC,CAAC;MAChCgB,QAAQ,CAAC;QAAEL,IAAI,EAAE,sBAAsB;QAAEC,OAAO,EAAEP;MAAO,CAAC,CAAC;IAC/D,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZS,QAAQ,CAAC;QAAEL,IAAI,EAAE,sBAAsB;QAAEC,OAAO,EAAEL,KAAK,CAACc;MAAQ,CAAC,CAAC;IACtE;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,sBAAsB,GAAIC,IAAI,IAAK;IACrCL,aAAa,CAACK,IAAI,CAAC;EACvB,CAAC;EAED,oBACIrB,OAAA,CAACC,YAAY,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,KAAK;MAAEW;IAAY,CAAE;IAAAN,QAAA,EAChDA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAGhC,CAAC;AAACd,EAAA,CAxBIF,aAAa;AAAAiB,EAAA,GAAbjB,aAAa;AA0BnB,MAAMkB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACnB,OAAOnC,UAAU,CAACM,YAAY,CAAC;AACnC,CAAC;AAAC6B,GAAA,CAFID,QAAQ;AAId,SAASlB,aAAa,EAAEkB,QAAQ;AAAG,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}