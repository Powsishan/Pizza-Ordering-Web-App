{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learn\\\\pizza\\\\frontend\\\\src\\\\context\\\\PizzaContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// pizzaContext.js (or your equivalent file)\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PizzaContext = /*#__PURE__*/createContext();\nconst pizzaReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_PIZZAS':\n      return {\n        ...state,\n        pizzas: action.payload\n      };\n    case 'FILTER_PIZZAS':\n      return {\n        ...state,\n        filteredPizzas: state.pizzas.filter(pizza => pizza.name.toLowerCase().includes(action.payload.toLowerCase()))\n      };\n    default:\n      return state;\n  }\n};\nexport const PizzaProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(pizzaReducer, {\n    pizzas: [],\n    filteredPizzas: []\n  });\n  const fetchPizzas = async () => {\n    // Fetch pizzas from API or any data source\n    const response = await fetch('/api/pizzas'); // Update with your actual API endpoint\n    const data = await response.json();\n    dispatch({\n      type: 'SET_PIZZAS',\n      payload: data\n    });\n  };\n  const filterPizzas = searchTerm => {\n    dispatch({\n      type: 'FILTER_PIZZAS',\n      payload: searchTerm\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(PizzaContext.Provider, {\n    value: {\n      state,\n      fetchPizzas,\n      filterPizzas\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(PizzaProvider, \"CWsk1y5RNep+WecQ35fL4o836VM=\");\n_c = PizzaProvider;\nexport const usePizza = () => {\n  _s2();\n  return useContext(PizzaContext);\n};\n_s2(usePizza, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"PizzaProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsxDEV","_jsxDEV","PizzaContext","pizzaReducer","state","action","type","pizzas","payload","filteredPizzas","filter","pizza","name","toLowerCase","includes","PizzaProvider","children","_s","dispatch","fetchPizzas","response","fetch","data","json","filterPizzas","searchTerm","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","usePizza","_s2","$RefreshReg$"],"sources":["D:/Learn/pizza/frontend/src/context/PizzaContext.js"],"sourcesContent":["// pizzaContext.js (or your equivalent file)\r\nimport React, { createContext, useContext, useReducer } from 'react';\r\n\r\nconst PizzaContext = createContext();\r\n\r\nconst pizzaReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'SET_PIZZAS':\r\n            return { ...state, pizzas: action.payload };\r\n        case 'FILTER_PIZZAS':\r\n            return { ...state, filteredPizzas: state.pizzas.filter(pizza => pizza.name.toLowerCase().includes(action.payload.toLowerCase())) };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const PizzaProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(pizzaReducer, { pizzas: [], filteredPizzas: [] });\r\n\r\n    const fetchPizzas = async () => {\r\n        // Fetch pizzas from API or any data source\r\n        const response = await fetch('/api/pizzas'); // Update with your actual API endpoint\r\n        const data = await response.json();\r\n        dispatch({ type: 'SET_PIZZAS', payload: data });\r\n    };\r\n\r\n    const filterPizzas = (searchTerm) => {\r\n        dispatch({ type: 'FILTER_PIZZAS', payload: searchTerm });\r\n    };\r\n\r\n    return (\r\n        <PizzaContext.Provider value={{ state, fetchPizzas, filterPizzas }}>\r\n            {children}\r\n        </PizzaContext.Provider>\r\n    );\r\n};\r\n\r\nexport const usePizza = () => useContext(PizzaContext);\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAEpC,MAAMM,YAAY,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACpC,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,YAAY;MACb,OAAO;QAAE,GAAGF,KAAK;QAAEG,MAAM,EAAEF,MAAM,CAACG;MAAQ,CAAC;IAC/C,KAAK,eAAe;MAChB,OAAO;QAAE,GAAGJ,KAAK;QAAEK,cAAc,EAAEL,KAAK,CAACG,MAAM,CAACG,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACT,MAAM,CAACG,OAAO,CAACK,WAAW,CAAC,CAAC,CAAC;MAAE,CAAC;IACtI;MACI,OAAOT,KAAK;EACpB;AACJ,CAAC;AAED,OAAO,MAAMW,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACb,KAAK,EAAEc,QAAQ,CAAC,GAAGnB,UAAU,CAACI,YAAY,EAAE;IAAEI,MAAM,EAAE,EAAE;IAAEE,cAAc,EAAE;EAAG,CAAC,CAAC;EAEtF,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;IAC7C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCL,QAAQ,CAAC;MAAEZ,IAAI,EAAE,YAAY;MAAEE,OAAO,EAAEc;IAAK,CAAC,CAAC;EACnD,CAAC;EAED,MAAME,YAAY,GAAIC,UAAU,IAAK;IACjCP,QAAQ,CAAC;MAAEZ,IAAI,EAAE,eAAe;MAAEE,OAAO,EAAEiB;IAAW,CAAC,CAAC;EAC5D,CAAC;EAED,oBACIxB,OAAA,CAACC,YAAY,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAAEvB,KAAK;MAAEe,WAAW;MAAEK;IAAa,CAAE;IAAAR,QAAA,EAC9DA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEhC,CAAC;AAACd,EAAA,CAnBWF,aAAa;AAAAiB,EAAA,GAAbjB,aAAa;AAqB1B,OAAO,MAAMkB,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMpC,UAAU,CAACI,YAAY,CAAC;AAAA;AAACgC,GAAA,CAA1CD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}