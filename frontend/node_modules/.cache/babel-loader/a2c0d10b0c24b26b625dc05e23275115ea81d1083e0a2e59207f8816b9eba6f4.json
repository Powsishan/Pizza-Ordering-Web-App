{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:4001/piz';\n\n// User login (Public route)\nexport const login = async credentials => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, credentials);\n    // console.log(response.data)\n    return response.data;\n  } catch (error) {\n    console.error('Error logging in:', error);\n    throw error;\n  }\n};\n\n// User registration (Public route)\nexport const register = async userData => {\n  try {\n    const response = await axios.post(`${API_URL}/register`, userData);\n    return response.data;\n  } catch (error) {\n    console.error('Error registering user:', error);\n    throw error;\n  }\n};\n\n// Function to get the token from localStorage\nexport const getToken = () => {\n  return localStorage.getItem('token');\n};\n\n// Function to check if the user is logged in\nexport const isLoggedIn = () => {\n  return !!getToken(); // Returns true if token exists\n};\n\n// Function to logout the user\nexport const logout = () => {\n  localStorage.removeItem('token'); // Remove token from localStorage\n};","map":{"version":3,"names":["axios","API_URL","login","credentials","response","post","data","error","console","register","userData","getToken","localStorage","getItem","isLoggedIn","logout","removeItem"],"sources":["D:/Learn/pizza/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:4001/piz';\r\n\r\n// User login (Public route)\r\nexport const login = async (credentials) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/login`, credentials);\r\n        // console.log(response.data)\r\n        return response.data; \r\n    } catch (error) {\r\n        console.error('Error logging in:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// User registration (Public route)\r\nexport const register = async (userData) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/register`, userData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error registering user:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Function to get the token from localStorage\r\nexport const getToken = () => {\r\n    return localStorage.getItem('token');\r\n};\r\n\r\n// Function to check if the user is logged in\r\nexport const isLoggedIn = () => {\r\n    return !!getToken(); // Returns true if token exists\r\n};\r\n\r\n// Function to logout the user\r\nexport const logout = () => {\r\n    localStorage.removeItem('token'); // Remove token from localStorage\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA,OAAO,MAAMC,KAAK,GAAG,MAAOC,WAAW,IAAK;EACxC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,QAAQ,EAAEE,WAAW,CAAC;IAClE;IACA,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAME,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EACxC,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,WAAW,EAAES,QAAQ,CAAC;IAClE,OAAON,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMI,QAAQ,GAAGA,CAAA,KAAM;EAC1B,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AACxC,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC5B,OAAO,CAAC,CAACH,QAAQ,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC;;AAED;AACA,OAAO,MAAMI,MAAM,GAAGA,CAAA,KAAM;EACxBH,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;AACtC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}