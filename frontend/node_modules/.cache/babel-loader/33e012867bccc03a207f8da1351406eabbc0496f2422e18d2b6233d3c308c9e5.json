{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:4001/piz';\n\n// Get all pizzas (Public route)\nexport const getPizzas = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/pizzas`);\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching pizzas:', error);\n    throw error;\n  }\n};\n\n// Add a pizza (Admin protected route)\nexport const addPizza = async pizzaData => {\n  const token = localStorage.getItem('token'); // Get the token from local storage\n\n  const formData = new FormData();\n  formData.append('Image', pizzaData.Image); // Append the image file to FormData\n  formData.append('Name', pizzaData.Name);\n  formData.append('Description', pizzaData.Description);\n  formData.append('Price', pizzaData.Price);\n\n  // Log the formData content to check what is being sent\n  console.log('FormData contents:');\n  for (let [key, value] of formData.entries()) {\n    console.log(`${key}:`, value);\n  }\n  try {\n    const response = await axios.post(`${API_URL}/addpizza`, formData, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        // Set the token in the Authorization header\n        'Content-Type': 'multipart/form-data' // Set the content type for FormData\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\n// Update a pizza (Admin protected route)\nexport const updatePizza = async (pizzaId, updatedData, token) => {\n  const formData = new FormData();\n  formData.append('Name', updatedData.Name);\n  formData.append('Description', updatedData.Description);\n  formData.append('Price', updatedData.Price);\n  if (updatedData.Image) {\n    formData.append('Image', updatedData.Image); // Append image if exists\n  }\n  try {\n    const response = await axios.put(`${API_URL}/updatepizza/${pizzaId}`, formData, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'multipart/form-data' // Set the content type for FormData\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error updating pizza:', error);\n    throw error;\n  }\n};\n\n// Delete a pizza (Admin protected route)\nexport const deletePizza = async (pizzaId, token) => {\n  try {\n    const response = await axios.delete(`${API_URL}/delpizza/${pizzaId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting pizza:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getPizzas","response","get","console","log","data","error","addPizza","pizzaData","token","localStorage","getItem","formData","FormData","append","Image","Name","Description","Price","key","value","entries","post","headers","updatePizza","pizzaId","updatedData","put","Authorization","deletePizza","delete"],"sources":["D:/Learn/pizza/frontend/src/services/pizzaService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:4001/piz';\r\n\r\n// Get all pizzas (Public route)\r\nexport const getPizzas = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/pizzas`);\r\n    console.log(response.data)\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching pizzas:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Add a pizza (Admin protected route)\r\nexport const addPizza = async (pizzaData) => {\r\n  const token = localStorage.getItem('token'); // Get the token from local storage\r\n\r\n  const formData = new FormData();\r\n  formData.append('Image', pizzaData.Image); // Append the image file to FormData\r\n  formData.append('Name', pizzaData.Name);\r\n  formData.append('Description', pizzaData.Description);\r\n  formData.append('Price', pizzaData.Price);\r\n\r\n  // Log the formData content to check what is being sent\r\n  console.log('FormData contents:');\r\n  for (let [key, value] of formData.entries()) {\r\n    console.log(`${key}:`, value);\r\n  }\r\n\r\n  try {\r\n      const response = await axios.post(`${API_URL}/addpizza`, formData, {\r\n          headers: {\r\n              'Authorization': `Bearer ${token}`, // Set the token in the Authorization header\r\n              'Content-Type': 'multipart/form-data', // Set the content type for FormData\r\n          },\r\n      });\r\n      return response.data;\r\n  } catch (error) {\r\n      throw error.response.data; \r\n  }\r\n};\r\n\r\n// Update a pizza (Admin protected route)\r\nexport const updatePizza = async (pizzaId, updatedData, token) => {\r\n  const formData = new FormData();\r\n  formData.append('Name', updatedData.Name);\r\n  formData.append('Description', updatedData.Description);\r\n  formData.append('Price', updatedData.Price);\r\n  \r\n  if (updatedData.Image) {\r\n      formData.append('Image', updatedData.Image); // Append image if exists\r\n  }\r\n\r\n  try {\r\n      const response = await axios.put(`${API_URL}/updatepizza/${pizzaId}`, formData, {\r\n          headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              'Content-Type': 'multipart/form-data', // Set the content type for FormData\r\n          },\r\n      });\r\n      return response.data;\r\n  } catch (error) {\r\n      console.error('Error updating pizza:', error);\r\n      throw error;\r\n  }\r\n};\r\n\r\n\r\n// Delete a pizza (Admin protected route)\r\nexport const deletePizza = async (pizzaId, token) => {\r\n  try {\r\n    const response = await axios.delete(`${API_URL}/delpizza/${pizzaId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error deleting pizza:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}